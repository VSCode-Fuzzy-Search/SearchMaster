on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    release:
        types:
            - created

jobs:
    test:
        name: Test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
        steps:
            - name: Install Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Checkout
              uses: actions/checkout@v4

            #- name: Install Node.js
            #  uses: actions/setup-node@v4
            #  with:
            #      node-version: 18.x

            - run: bun install
            # In headless Linux CI machines XVFB is required to run VS Code, so if Linux is the current OS run the tests in an XVFB enabled environment.
            - run: xvfb-run -a bun test
              if: runner.os == 'Linux'
            - run: bun test
              if: runner.os != 'Linux'

    # Adapted from: https://github.com/prettier/prettier-vscode/blob/main/.github/workflows/main.yml
    package:
        name: Package
        runs-on: ubuntu-latest
        needs: test
        # The idea here is that we only package the extension when a new tag is created.
        if: success() && startsWith(github.ref, 'refs/tags/')
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Install Packages
              run: bun install

            - name: Generate VSIX
              run: bun vsce package

            - name: Store VSIX Name and Path in Environment Variables
              run: |
                  echo "VSIX_PATH=$(find . -maxdepth 1 -type f -iname "*.vsix" | head -1)" >> $GITHUB_ENV
                  echo "VSIX_NAME=$(basename $(find . -maxdepth 1 -type f -iname "*.vsix" | head -1))" >> $GITHUB_ENV

            - name: Upload VSIX Artifact
              uses: actions/upload-artifact@v4
              with:
                  # prettier-ignore
                  path: ${{ env.VSIX_PATH }}
                  name: ${{ env.VSIX_NAME }}
