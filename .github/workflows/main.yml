on:
    push:
        branches:
            - main
        tags:
            - '*'
    pull_request:
        branches:
            - main

jobs:
    test:
        name: Test on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 7
                  run_install: false

            - name: 'Install Node.js (Cache: PNPM)'
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'

            - name: Install Dependencies
              run: pnpm install

            # In headless Linux CI machines XVFB is required to run VS Code, so if Linux is the current OS run the tests in an XVFB enabled environment.
            - name: Run Tests
              run: ${{ runner.os == 'Linux' && 'xvfb-run -a pnpm coverage' || 'pnpm coverage' }}

            # For specifically pull requests, we want to comment the coverage results on the PR.
            - name: Comment Coverage
              if: github.event_name == 'pull_request'
              uses: sidx1024/report-nyc-coverage-github-action@v1.2.7
              with:
                  coverage_file: coverage/coverage-summary.json

    # Adapted from: https://github.com/prettier/prettier-vscode/blob/main/.github/workflows/main.yml
    package:
        name: Package
        runs-on: ubuntu-latest
        needs: test
        # Only package the extension when a new tag is created.
        if: success() && startsWith(github.ref, 'refs/tags/')
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 7
                  run_install: false

            - name: 'Install Node.js (Cache: PNPM)'
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'

            - name: Install Dependencies
              run: pnpm install

            - name: Generate VSIX (via VSCE)
              run: npx @vscode/vsce package

            - name: Set VSIX Name and Path in Output
              id: vsix-output
              run: |
                  echo "VSIX_PATH=$(find . -maxdepth 1 -type f -iname "*.vsix" | head -1)" >> $GITHUB_OUTPUT
                  echo "VSIX_NAME=$(basename $(find . -maxdepth 1 -type f -iname "*.vsix" | head -1))" >> $GITHUB_OUTPUT

            - name: Upload VSIX Artifact
              uses: actions/upload-artifact@v4
              with:
                  # prettier-ignore
                  path: ${{ steps.vsix-output.outputs.VSIX_PATH }}
                  name: ${{ steps.vsix-output.outputs.VSIX_NAME }}

        outputs:
            VSIX_PATH: ${{ steps.vsix-output.outputs.VSIX_PATH }}
            VSIX_NAME: ${{ steps.vsix-output.outputs.VSIX_NAME }}

    # We want to make sure that the release is only created if changes were actually made to business logic.
    release-check:
        name: Release Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Check Release
              id: release-check
              uses: phish108/release-check@1.0.15
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

        outputs:
            PROCEED_WITH_RELEASE: ${{ steps.release-check.outputs.proceed }}

    # Automatically create a release:
    # - If no tag is present, the release will be a prerelease with an automatically generated 'latest' tag.
    # - If a tag is present, the release will be a stable release with the tag name.
    # NOTE: In future, if CD encounters issues after the release step (for example, failing to publish),
    # it's possible to rollback the release: https://github.com/author/action-rollback
    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [package, release-check]
        # Only proceed with the release if:
        # 1. All previous steps succeeded.
        # 2. The release-check step indicates that business logic changes were made.
        if: success() && needs.release-check.outputs.PROCEED_WITH_RELEASE
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Download VSIX Artifact
              uses: actions/download-artifact@v4
              with:
                  name: ${{ needs.package.outputs.VSIX_NAME }}
                  path: ${{ needs.package.outputs.VSIX_PATH }}

            - name: Automatic Release
              uses: marvinpinto/action-automatic-releases@latest
              with:
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  automatic_release_tag: latest
                  # If a tag is present, the release will be a stable release with the tag name.
                  prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  title: Development Build [${{ github.ref }}] [${{ github.sha }}]
                  files: |
                      LICENSE.txt
                      ${{ needs.package.outputs.VSIX_PATH }}
